ARG BUILDER_IMAGE="ghcr.io/andriykalashnykov/go-face:v0.0.1@sha256:85b6af3a2d687b0c538d5f7ac7ce4e150d33a31f1539863f2b9587909c538bb8"

FROM ${BUILDER_IMAGE} AS builder

# Set the working directory
WORKDIR /app

# Copy go modules files
COPY ./go.mod .
COPY ./go.sum .

# Copy the source code
COPY ./cmd/ cmd/
COPY ./internal/ internal/

# Copy the recources
COPY ./fonts/ fonts/
COPY ./images/ images/
COPY ./models/ models/
COPY ./persons/ persons/

ENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig/

RUN <<EOT
    if [ "${TARGETARCH}" = "amd64" ]; then
      apt install -y libquadmath0;
      export CGO_LDFLAGS="-lcblas -llapack_atlas -lgfortran -lquadmath -lblas -latlas"
    else
      export CGO_LDFLAGS="-lcblas -llapack_atlas -lgfortran -lblas -latlas"
    fi

    /usr/local/go/bin/go mod download
    CGO_ENABLED=1 /usr/local/go/bin/go build -trimpath -ldflags "-s -w -extldflags -static" -tags "static netgo cgo static_build" -o cmd/main cmd/main.go
EOT

FROM alpine:3.20.3@sha256:1e42bbe2508154c9126d48c2b8a75420c3544343bf86fd041fb7527e017a4b4a AS runtime

WORKDIR /app

COPY --from=builder /app/cmd/main .
COPY --from=builder /app/fonts fonts/
COPY --from=builder /app/images/ images/
COPY --from=builder /app/models/ models/
COPY --from=builder /app/persons/ persons/

# Keep the container running
CMD ["tail", "-f", "/dev/null"]
