

FROM ghcr.io/andriykalashnykov/dlib-docker:v19.24.0 AS builder

ENV DEBIAN_FRONTEND=noninteractive
RUN DEBIAN_FRONTEND=${DEBIAN_FRONTEND} apt-get update && apt-get install -y --no-install-recommends libquadmath0

# Set the working directory
WORKDIR /app

# Copy go modules files
COPY ./go.mod .
COPY ./go.sum .

# Copy the source code
COPY ./cmd/ cmd/
COPY ./internal/ internal/

# Copy the recources
COPY ./fonts/ fonts/
COPY ./images/ images/
COPY ./models/ models/
COPY ./persons/ persons/

# https://hub.docker.com/_/golang/
# Install Go
RUN curl -sLO https://go.dev/dl/go1.23.2.linux-$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/').tar.gz \
    && tar -C /usr/local -xzf go1.23.2.linux-$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/').tar.gz \
    && rm -rf go1.23.2.linux-$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/').tar.gz

ENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig/

RUN /usr/local/go/bin/go mod download
RUN  CGO_ENABLED=1 CGO_LDFLAGS="-lcblas -llapack_atlas -lgfortran -lquadmath -lblas -latlas" /usr/local/go/bin/go build -ldflags "-s -w -extldflags -static" -tags static -o cmd/main cmd/main.go
#GOOS=linux GOARCH=arm64

FROM alpine:3.20.3 AS runtime

WORKDIR /app

COPY --from=builder /app/cmd/main .
COPY --from=builder /app/fonts fonts/
COPY --from=builder /app/images/ images/
COPY --from=builder /app/models/ models/
COPY --from=builder /app/persons/ persons/

# Keep the container running
CMD ["tail", "-f", "/dev/null"]
